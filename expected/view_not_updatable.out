/*
 * Tests of conditions that make a view not updatable
 */
-- DISTINCT
CREATE VIEW foov2 AS SELECT DISTINCT a, b FROM foo;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of DISTINCT
DROP VIEW foov2;
-- DISTINCT ON
CREATE VIEW foov2 AS SELECT DISTINCT ON (a) a, b FROM foo;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of DISTINCT
DROP VIEW foov2;
-- GROUP BY
CREATE VIEW foov2 AS SELECT a, b FROM foo GROUP BY a, b;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of GROUP BY
DROP VIEW foov2;
-- HAVING
CREATE VIEW foov2 AS SELECT sum(a) FROM foo HAVING sum(a) > 0;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2);
ERROR:  not updatable because of HAVING
DROP VIEW foov2;
-- UNION
CREATE VIEW foov2 AS SELECT * FROM foo UNION SELECT * FROM foo;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of set operation
DROP VIEW foov2;
-- multiple FROM list items
CREATE VIEW foov2 AS SELECT foo.a, foo.b FROM foo, foo AS bar WHERE foo.a = bar.a;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of more than FROM list item
DROP VIEW foov2;
-- JOIN
CREATE VIEW foov2 AS SELECT foo.a, foo.b FROM foo JOIN foo AS bar ON (foo.a = bar.a);
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of non-plain FROM list item
DROP VIEW foov2;
-- VALUES (non-table FROM item)
CREATE VIEW foov2 AS SELECT * FROM (VALUES (1, 'foo'::text)) AS bar (a, b);
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of non-table FROM item
DROP VIEW foov2;
-- LIMIT
CREATE VIEW foov2 AS SELECT a, b FROM foo LIMIT 10;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of LIMIT
DROP VIEW foov2;
-- OFFSET
CREATE VIEW foov2 AS SELECT a, b FROM foo OFFSET 20;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because of OFFSET
DROP VIEW foov2;
-- non-plain column references in select list
CREATE VIEW foov2 AS SELECT a, b || b FROM foo;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two');
ERROR:  not updatable because column 2 is not a plain column reference
DROP VIEW foov2;
-- duplicate column references in select list
CREATE VIEW foov2 AS SELECT a, b, a AS aa FROM foo;
CREATE TRIGGER foov2_update INSTEAD OF INSERT OR UPDATE OR DELETE ON foov2 FOR EACH ROW EXECUTE PROCEDURE update_view();
INSERT INTO foov2 VALUES (2, 'two', 3);
ERROR:  not updatable because column 1 of base table referenced multiple times
DROP VIEW foov2;
